{"version":3,"sources":["./src/app/pages/area-of-specialization/area-of-specialization-routing.module.ts","./src/app/pages/area-of-specialization/area-of-specialization.module.ts","./src/app/pages/area-of-specialization/area-of-specialization.page.ts","./src/app/pages/area-of-specialization/area-of-specialization.page.scss","./src/app/pages/area-of-specialization/area-of-specialization.page.html"],"names":[],"mappings":"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","file":"src_app_pages_area-of-specialization_area-of-specialization_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AreaOfSpecializationPage } from './area-of-specialization.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AreaOfSpecializationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AreaOfSpecializationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AreaOfSpecializationPageRoutingModule } from './area-of-specialization-routing.module';\n\nimport { AreaOfSpecializationPage } from './area-of-specialization.page';\nimport {LottieModule} from 'ngx-lottie';\nimport player from 'lottie-web';\n\nexport function playerFactory(){\n  return player;\n}\n\n@NgModule({\n  imports: [\n    LottieModule.forRoot({player:playerFactory}),\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AreaOfSpecializationPageRoutingModule\n  ],\n  declarations: [AreaOfSpecializationPage]\n})\nexport class AreaOfSpecializationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { AnimationOptions } from 'ngx-lottie';\n\n@Component({\n  selector: 'app-area-of-specialization',\n  templateUrl: './area-of-specialization.page.html',\n  styleUrls: ['./area-of-specialization.page.scss'],\n  animations:[  \n    trigger('answer', [\n      transition('void => *', [style({ opacity: 0, transform: 'translateY(-3rem)'}), animate(300)])\n    ])\n  ]\n})\nexport class AreaOfSpecializationPage{\n  quizzes = [];\n\n  currentQuiz:number;\n  answerSelected = false;\n  correctAnswers = 0;\n  incorrectAnswers = 0;\n  prevAnswered = [];\n  \n  result = false;\n  resultStatus = 'Show Result';\n\n  options:AnimationOptions = {\n    path:'assets/welldone.json'\n  }\n  \n  \n    constructor(private router:Router) { }\n  \n    ngOnInit(): void {\n      fetch('./assets/GeneralEducationJsonData/QuestionAndAnswerLetExamReviewer.json').then(res => res.json())\n      .then(content => {\n        this.quizzes = content.AreaOfSpecialization[0].English;\n      });\n      // this.quizzes = this.quizService.getQuizzes();\n      this.currentQuiz = this.getRandom();\n      \n      this.prevAnswered.push(this.currentQuiz);\n    }\n  \n    onAnswer(option: boolean){\n      this.answerSelected = true;\n      setTimeout(() => {\n        let newQuiz = this.getRandom();\n         while(this.prevAnswered.includes(newQuiz) && this.prevAnswered.length < 50){\n          newQuiz = this.getRandom();\n         }\n         this.currentQuiz = newQuiz;\n          this.prevAnswered.push(this.currentQuiz);\n        \n          this.answerSelected = false;\n      }, 300);\n  \n      if(option){\n        this.correctAnswers++;\n      }else{\n        this.incorrectAnswers++;\n      }\n      \n    }\n\n    getRandom(){\n      return Math.floor(Math.random() * this.quizzes.length);\n    }\n  \n    showResult(){\n      this.result = true;\n      this.resultStatus = 'Play Again!';  \n      // Swal.fire({\n      //   title: this.correctAnswers + \" out of \" + this.quizzes.length,\n      //   showDenyButton: true,\n      //   showCancelButton: true,\n      //   confirmButtonText: 'Retake',\n      //   denyButtonText: `Cancel`,\n      // }).then((results) => {\n      //   if (results.isConfirmed) {\n      //     this.resultStatus = \"Show Result\";\n      //     this.playAgain();\n      //   } else if (results.isDenied) {\n      //     Swal.fire('nice', '', 'info')\n      //     this.resultStatus = \"Show Result\";\n      //     this.router.navigate(['']);\n      //   }\n      // }) \n    }\n    playAgain(){\n      this.prevAnswered = [];\n      this.prevAnswered.push(this.getRandom());\n      this.correctAnswers = 0;\n      this.incorrectAnswers = 0;\n    }\n  \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmVhLW9mLXNwZWNpYWxpemF0aW9uLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>AreaOfSpecialization</ion-title>\\n    <ion-buttons slot=\\\"start\\\"><ion-menu-button menu=\\\"letexam-menu\\\"></ion-menu-button></ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"prevAnswered.length < 51\\\" class=\\\"answers\\\">\\n    <ion-card-header>\\n      <h4>{{ prevAnswered.length }} of {{ quizzes.length }}</h4>\\n      <h4>{{ quizzes[currentQuiz]?.Questions }}</h4>\\n    </ion-card-header>\\n    <ion-card-content class=\\\"answers__list\\\" *ngFor=\\\"let quiz of quizzes[currentQuiz]?.MultipleChoice\\\">\\n      <ion-radio-group (ionChange)=\\\"onAnswer(quiz.correct)\\\">\\n      <ion-item>\\n          <ion-label>{{ quiz.choices }}</ion-label>\\n          <ion-radio value=\\\"{{ quiz.choices }}\\\" [disabled]=\\\"answerSelected\\\" ion slot=\\\"start\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n  <ion-card *ngIf=\\\"prevAnswered.length >= 50 \\\">\\n    <ion-card-header>\\n        <h4 class=\\\"notedone\\\">Exam Was Done</h4>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button (click)=\\\"showResult()\\\" *ngIf=\\\"resultStatus === 'Show Result'\\\">{{ resultStatus }}</ion-button>\\n    <!-- <button class=\\\"btn btn--new\\\" (click)=\\\"playAgain()\\\" *ngIf=\\\"resultStatus !== 'Show Result'\\\">{{ resultStatus }}</button> -->\\n    </ion-card-content>\\n  </ion-card>   \\n  <ion-card *ngIf=\\\"correctAnswers > 0 && resultStatus == 'Play Again!'\\\">\\n    <ion-card-content>\\n      <h2>You got {{correctAnswers}} over {{quizzes.length}}</h2>\\n      <ng-lottie [options]='options'></ng-lottie>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}